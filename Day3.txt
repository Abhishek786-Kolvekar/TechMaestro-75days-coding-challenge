Pascal's Triangle

def generate(self, numRows: int) -> List[List[int]]:

	result=[[1]*(i+1) for i in range(numRows)]

	for i in range(2,numRows):
	    for j in range(1,i):
		result[i][j]=result[i-1][j-1]+result[i-1][j]
	return result

Remove duplicates from sorted array

def removeDuplicates(self, nums: List[int]) -> int:
        i,l=0,len(nums)-1
        while i<l:
            if nums[i]==nums[i+1]:
                del(nums[i])
                l-=1
            else:
                i+=1
        return i+1

Merge Intervals

def merge(self, intervals):
        intervals.sort()
        n, r = len(intervals), 0

        for i in range(n-1):
            present, next = intervals[i-r], intervals[i+1-r]

            if present[1] >= next[0]:
                next[0], next[1] = present[0], max(present[1], next[1])
                intervals.remove(present)
                r += 1

        return intervals

3-Sum

def threeSum(self, nums: List[int]) -> List[List[int]]:
        result = []
        nums = sorted(nums)
        for i in range(len(nums)):
            j, k = i + 1 ,len(nums) - 1

            if i > 0 and nums[i] == nums[i - 1]: continue

            while j < k:
                if k < len(nums) - 1 and nums[k] == nums[k + 1]:
                    k -= 1
                elif nums[i] + nums[j] + nums[k] > 0:
                    k -= 1
                elif nums[i] + nums[j] + nums[k] < 0:
                    j += 1
                else:
                    result.append([nums[i], nums[j], nums[k]])
                    j += 1
                    k -= 1

        return result